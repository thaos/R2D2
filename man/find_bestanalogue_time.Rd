% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/r2d2_algo.R
\name{find_bestanalogue_time}
\alias{find_bestanalogue_time}
\title{Finds the time index of the best analogue of rank association}
\usage{
find_bestanalogue_time(conddim_REF, block_conddim_BC)
}
\arguments{
\item{conddim_REF}{A matrix of dimension \code{T_ref x P_cond}
that contains the rank data where the best analogue of \code{block_conddim_BC} is searched.
\code{T_ref} is the number of
time steps and \code{P_cond} is the number of conditioning dimensions.}

\item{block_conddim_BC}{A matrix of dimension \code{T_block x P_cond}.
It corresponds to the block of rank association for which the best analogue is searched in \code{conddim_REF}.
\code{T_block} corresponds to a number of time steps in the block (i.e., its length) and
should be lower or equal to \code{T_ref}.}
}
\value{
A list with the following elements:
\itemize{
  \item tstar The time index of the best analogue of \code{block_conddim_BC} found in \code{conddim_REF}.
  This time index corresponds to the last time step of the block of rank association.
  \item dist The euclidean distance between \code{block_conddim_BC} and
  the best analogue found in \code{conddim_REF}.
 }
}
\description{
Finds the time index of the best analogue of \code{block_conddim_BC} in \code{conddim_REF}
in terms of the Euclidean distance.
}
\examples{
refdata <- matrix(c(0.3, 0.5, 0.9, 0.8,
                    1.1, 1.7, 1.2, 1.9,
                    2.1, 1.8, 3.0, 2.7), ncol = 3, nrow = 4)
bc1d <- matrix(c(0.7, 0.5, 0.2, 0.9,
                 1.3, 1.8, 1.1, 1.4,
                 1.9, 2.9, 2.0, 2.6), ncol = 3, nrow = 4)

ranks_refdata <- apply(refdata, 2, rank)
ranks_bc1d <- apply(bc1d, 2, rank)

# 1 conditioning dimension, 0 lag
icond <- 1
block_conddim_BC <- ranks_bc1d[1, icond, drop = FALSE]
conddim_REF <- ranks_refdata[, icond, drop = FALSE]
find_bestanalogue_time(conddim_REF, block_conddim_BC)

# 1 conditioning dimension, 1 lag
icond <- 1
block_conddim_BC <- ranks_bc1d[1:2, icond, drop = FALSE]
conddim_REF <- ranks_refdata[, icond, drop = FALSE]
find_bestanalogue_time(conddim_REF, block_conddim_BC)

# 2 conditioning dimensions, 1 lag
icond <- 1:2
block_conddim_BC <- ranks_bc1d[1:2, icond, drop = FALSE]
conddim_REF <- ranks_refdata[, icond, drop = FALSE]
find_bestanalogue_time(conddim_REF, block_conddim_BC)
}
